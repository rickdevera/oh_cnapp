AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for HA web application infrastructure.
Parameters:
  ProjectName:
    Description: Project Name (like workshop, immersionday, awsjams)
    Type: String
    Default: amb
  Environment:
    Description: Environment
    Type: String
    Default:  lab

Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  OHcnappWebServer1:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      ImageId:  !FindInMap 
        - RegionMap
        - !Ref 'AWS::Region'
        - AAAMI
      NetworkInterfaces:
         - AssociatePublicIpAddress: "true"
 #          PrivateIpAddress: '10.0.1.10'
           DeviceIndex: "0"
           GroupSet:
             - Ref: WebServerSecurityGroup
           SubnetId: 
            Ref: PrivateSubnet1
      KeyName: !Ref OHcnappKeyPair 
      UserData:
        Fn::Base64: |
          #!/bin/bash
          yum update -y
          yum install ec2-instance-connect
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "<h1>Welcome to your Apache Web server 1</h1>" > /var/www/html/index.html

      Tags:
        - Key: Name
          Value: "OHcnappWebServer1"

  OHcnappWebServer2:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      ImageId:  !FindInMap 
        - RegionMap
        - !Ref 'AWS::Region'
        - AAAMI
      NetworkInterfaces:
         - AssociatePublicIpAddress: "true"
#           PrivateIpAddress: '10.0.2.10'
           DeviceIndex: "0"
           GroupSet:
             - Ref: WebServerSecurityGroup
           SubnetId: 
            Ref: PrivateSubnet2
      KeyName: !Ref OHcnappKeyPair 
      UserData:
        Fn::Base64: |
          #!/bin/bash
          yum update -y
          sudo yum install ec2-instance-connect
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "<h1>Welcome to your Apache Web server 2</h1>" > /var/www/html/index.html
      Tags:
        - Key: Name
          Value: "OHcnappWebServer2"

  OHcnappKeyPair:
    Type: 'AWS::EC2::KeyPair'
    Properties:
      KeyFormat: "pem"
      KeyName: "OHcnappKeyPair"
      Tags: 
        - Key: Name
          Value:  !Join ["", [!Sub "${ProjectName}-${Environment}-OHcnappKeyPair"]]

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: !Select [0, !GetAZs '']

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.4.0/24
      AvailabilityZone: !Select [1, !GetAZs '']

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroups: [!Ref ALBSecurityGroup]
      Scheme: internet-facing

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: 
        - Type: forward
          TargetGroupArn:
            Ref: ALBTargetGroup
      LoadBalancerArn: 
        Ref: LoadBalancer
      Port: 80
      Protocol: "HTTP"

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Ref: MyVPC
      Targets:
        - Id:
            Ref: OHcnappWebServer1
          Port: 80
        - Id:
            Ref: OHcnappWebServer2
          Port: 80
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: 'true'
        - Key: stickiness.type
          Value: lb_cookie
        - Key: stickiness.lb_cookie.duration_seconds
          Value: '180'

  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow web traffic to ALB
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow traffic from ALB
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref ALBSecurityGroup

Outputs:
  LoadBalancerDNSName:
    Description: The DNS name of the ALB
    Value: !GetAtt LoadBalancer.DNSName

Mappings:
  RegionMap:
#    us-east-1:
#      GUACAMI: ami-00ebca77849e4072b
#      W10AMI: ami-00b386e7d7fb65fdc
#      AAAMI: ami-0f6ee6ba26a44b0f7
    us-east-2:
#      GUACAMI: ami-0ec5f7389fb01598b
#      W10AMI: ami-06540a8b6d12df1ea
      AAAMI: ami-0a7fa328337f5020b
    us-west-2:
#      GUACAMI: ami-0bf18ec307863dcc5
#      W10AMI: ami-002a07f4f7c694d11
      AAAMI: ami-06448b8505d6cf29c
    us-west-1:
#      GUACAMI: ami-034bffbf234a264e9
#      W10AMI: ami-00a9d9ce4c6db5313
#
      AAAMI: ami-05a0e4e5aafb17026

