AWSTemplateFormatVersion: "2010-09-09"
Resources:
  # Creating 20 security groups with Fn::ForEach
  MySecurityGroups:
    Type: "AWS::CloudFormation::Macro"
    Properties:
      ServiceToken: "Fn::GetAtt: [AWSLambdaServiceToken]"  # Reference to the macro lambda
      Description: "Generate 20 Security Groups"
      Parameters:
        GroupNames:
          - !Ref GroupNames
        Rules:
          - Ingress: "allow-public-to-private"
          - Egress: "allow-private-to-public"
        Template: |
          {
            "Resources": {
              "SG001": {
                "Type": "AWS::EC2::SecurityGroup",
                "Properties": {
                  "GroupName": "SG001",
                  "GroupDescription": "Security Group 001",
                  "VpcId": "vpc-12345678",
                  "SecurityGroupEgress": [],
                  "SecurityGroupIngress": []
                }
              }
            }
          }
      Outputs:
        - GroupNames
          - SG001
          - SG002
          - SG003
          - SG004
          - SG005
          - SG006
          - SG007
          - SG008
          - SG009
          - SG010
          - SG011
          - SG012
          - SG013
          - SG014
          - SG015
          - SG016
          - SG017
          - SG018
          - SG019
          - SG020
  # Creating a private subnet
  PrivateSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: "172.16.1.0/24"
      VpcId: "vpc-12345678"
      AvailabilityZone: "us-west-2a"  # Example zone
      MapPublicIpOnLaunch: false
      
  # Creating a public subnet
  PublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: "172.16.2.0/24"
      VpcId: "vpc-12345678"
      AvailabilityZone: "us-west-2a"
      MapPublicIpOnLaunch: true

  # Allowing ingress and egress between public and private subnets
  SecurityGroupRulePrivate:
    Type: "AWS::EC2::SecurityGroupIngress"
    Properties:
      GroupId: "SG001"  # Reference to the private subnet security group
      IpProtocol: "-1"  # All protocols
      CidrIp: "172.16.2.0/24"  # Public subnet

  SecurityGroupRulePublic:
    Type: "AWS::EC2::SecurityGroupIngress"
    Properties:
      GroupId: "SG002"  # Reference to the public subnet security group
      IpProtocol: "-1"
      CidrIp: "172.16.1.0/24"  # Private subnet

  # Egress-only security group
  InternetEgressSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: "InternetEgressSG"
      GroupDescription: "Only allows egress to the internet"
      VpcId: "vpc-12345678"
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: "0.0.0.0/0"  # Allow all outbound traffic to the internet
