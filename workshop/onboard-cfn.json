{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Tenable AWS account template",
    "Parameters": {
        "CloudTrailBucketName": {
            "Default": "-",
            "Type": "String"
        },
        "CloudTrailKeyArn": {
            "Default": "-",
            "Type": "CommaDelimitedList"
        },
        "RoleExternalId": {
            "AllowedPattern": ".+",
            "Type": "String"
        },
        "RoleJitPolicy": {
            "AllowedValues": [
                true,
                false
            ],
            "Default": false,
            "Type": "String"
        },
        "RoleMonitoringPolicy": {
            "AllowedValues": [
                true,
                false
            ],
            "Default": true,
            "Type": "String"
        },
        "RoleName": {
            "Default": "TenableRole",
            "Type": "String"
        },
        "RoleTrustedPrincipalId": {
            "Type": "String"
        },
        "RoleRemediationPolicy": {
            "AllowedValues": [
                true,
                false
            ],
            "Default": false,
            "Type": "String"
        },
        "RoleWorkloadProtectionPolicy": {
            "AllowedValues": [
                true,
                false
            ],
            "Default": true,
            "Type": "String"
        }
    },
    "Conditions": {
        "CloudTrailBucketEnabled": {
            "Fn::Equals": [
                "-",
                {
                    "Ref": "CloudTrailBucketName"
                }
            ]
        },
        "BucketEncryptionEnabled": {
            "Fn::Equals": [
                "-",
                {
                    "Fn::Select": [
                        0,
                        {
                            "Ref": "CloudTrailKeyArn"
                        }
                    ]
                }
            ]
        },
        "RoleJitPolicyEnabled": {
            "Fn::Equals": [
                true,
                {
                    "Ref": "RoleJitPolicy"
                }
            ]
        },
        "RoleMonitoringPolicyEnabled": {
            "Fn::Equals": [
                true,
                {
                    "Ref": "RoleMonitoringPolicy"
                }
            ]
        },
        "RoleWorkloadProtectionPolicyEnabled": {
            "Fn::Equals": [
                true,
                {
                    "Ref": "RoleWorkloadProtectionPolicy"
                }
            ]
        },
        "RoleRemediationPolicyEnabled": {
            "Fn::Equals": [
                true,
                {
                    "Ref": "RoleRemediationPolicy"
                }
            ]
        }
    },
    "Resources": {
        "TenableRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {
                                    "Ref": "RoleTrustedPrincipalId"
                                }
                            },
                            "Action": "sts:AssumeRole",
                            "Condition": {
                                "StringEquals": {
                                    "sts:ExternalId": {
                                        "Ref": "RoleExternalId"
                                    }
                                }
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    {
                        "Fn::If": [
                            "RoleMonitoringPolicyEnabled",
                            {
                                "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/SecurityAudit"
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "Policies": [
                    {
                        "Fn::If": [
                            "RoleMonitoringPolicyEnabled",
                            {
                                "PolicyName": "Read-onlyPolicy",
                                "PolicyDocument": {
                                    "Version": "2012-10-17",
                                    "Statement": [
                                        {
                                            "Effect": "Allow",
                                            "Action": [
                                                "acm:Describe*",
                                                "acm:List*",
                                                "autoscaling:Describe*",
                                                "batch:Describe*",
                                                "batch:List*",
                                                "cloudformation:Describe*",
                                                "cloudformation:Get*",
                                                "cloudformation:List*",
                                                "cloudfront:Get*",
                                                "cloudfront:ListDistributions*",
                                                "cloudtrail:Describe*",
                                                "cloudtrail:Get*",
                                                "cloudtrail:List*",
                                                "cloudtrail:LookupEvents",
                                                "cloudwatch:Describe*",
                                                "cloudwatch:GetMetric*",
                                                "cloudwatch:ListMetrics",
                                                "cognito-idp:ListResourcesForWebACL",
                                                "cognito-sync:GetCognitoEvents",
                                                "config:Describe*",
                                                "dynamodb:Describe*",
                                                "dynamodb:List*",
                                                "ec2:Describe*",
                                                "ecr:Describe*",
                                                "ecr:GetRegistryScanningConfiguration",
                                                "ecr:GetRepositoryPolicy",
                                                "ecr:List*",
                                                "ecr:StartImageScan",
                                                "ecr-public:Describe*",
                                                "ecr-public:GetRepositoryPolicy",
                                                "ecr-public:List*",
                                                "ecs:Describe*",
                                                "ecs:List*",
                                                "eks:Describe*",
                                                "eks:List*",
                                                "elasticache:Describe*",
                                                "elasticache:List*",
                                                "elasticbeanstalk:Describe*",
                                                "elasticbeanstalk:List*",
                                                "elasticloadbalancing:Describe*",
                                                "elasticmapreduce:Describe*",
                                                "elasticmapreduce:List*",
                                                "es:Describe*",
                                                "es:List*",
                                                "events:ListRules",
                                                "iam:Generate*",
                                                "iam:Get*",
                                                "iam:List*",
                                                "identitystore:Describe*",
                                                "inspector2:List*",
                                                "iot:GetTopicRule",
                                                "kms:Describe*",
                                                "kms:GetKey*",
                                                "kms:List*",
                                                "kinesis:Describe*",
                                                "kinesis:List*",
                                                "lambda:Get*Policy",
                                                "lambda:GetAccountSettings",
                                                "lambda:List*",
                                                "logs:Describe*",
                                                "organizations:Describe*",
                                                "organizations:List*",
                                                "rds:Describe*",
                                                "rds:List*",
                                                "redshift:Describe*",
                                                "redshift:List*",
                                                "route53:Get*",
                                                "route53:List*",
                                                "route53domains:Get*",
                                                "route53domains:List*",
                                                "route53resolver:Get*",
                                                "route53resolver:List*",
                                                "s3:Describe*",
                                                "s3:GetAccessPoint*",
                                                "s3:GetAccountPublicAccessBlock",
                                                "s3:GetBucket*",
                                                "s3:GetEncryptionConfiguration",
                                                "s3:GetJobTagging",
                                                "s3:GetLifecycleConfiguration",
                                                "s3:ListAccessPoints",
                                                "s3:ListAllMyBuckets",
                                                "s3:ListBucketVersions",
                                                "s3:ListJobs",
                                                "secretsmanager:Describe*",
                                                "secretsmanager:GetResourcePolicy",
                                                "secretsmanager:List*",
                                                "sns:Get*",
                                                "sns:List*",
                                                "sqs:Get*",
                                                "sqs:List*",
                                                "ssm:Describe*",
                                                "ssm:List*",
                                                "sso:Describe*",
                                                "sso:Get*",
                                                "sso:List*",
                                                "sso-directory:List*",
                                                "sso-directory:Search*",
                                                "sts:DecodeAuthorizationMessage",
                                                "tag:Get*",
                                                "wafv2:Get*",
                                                "wafv2:List*"
                                            ],
                                            "Resource": "*"
                                        },
                                        {
                                            "Effect": "Allow",
                                            "Action": [
                                                "s3:GetObject",
                                                "s3:ListBucket"
                                            ],
                                            "Resource": {
                                                "Fn::Sub": "arn:${AWS::Partition}:s3:::elasticbeanstalk-*"
                                            }
                                        },
                                        {
                                            "Effect": "Allow",
                                            "Action": "apigateway:Get*",
                                            "NotResource": {
                                                "Fn::Sub": "arn:${AWS::Partition}:apigateway:*::/apikeys*"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "RoleRemediationPolicyEnabled",
                            {
                                "PolicyName": "RemediationPolicy",
                                "PolicyDocument": {
                                    "Version": "2012-10-17",
                                    "Statement": [
                                        {
                                            "Effect": "Allow",
                                            "Action": [
                                                "ec2:DeleteSecurityGroup",
                                                "ec2:ModifyInstanceMetadataOptions",
                                                "ec2:ModifyVpcEndpoint",
                                                "ec2:RevokeSecurityGroupEgress",
                                                "ec2:RevokeSecurityGroupIngress",
                                                "ecr:DeleteRepositoryPolicy",
                                                "ecr:SetRepositoryPolicy",
                                                "iam:AddUserToGroup",
                                                "iam:AttachGroupPolicy",
                                                "iam:AttachRolePolicy",
                                                "iam:AttachUserPolicy",
                                                "iam:CreatePolicy",
                                                "iam:CreatePolicyVersion",
                                                "iam:DeactivateMFADevice",
                                                "iam:DeleteAccessKey",
                                                "iam:DeleteGroup",
                                                "iam:DeleteGroupPolicy",
                                                "iam:DeleteLoginProfile",
                                                "iam:DeletePolicy",
                                                "iam:DeletePolicyVersion",
                                                "iam:DeleteRole",
                                                "iam:DeleteRolePermissionsBoundary",
                                                "iam:DeleteRolePolicy",
                                                "iam:DeleteServerCertificate",
                                                "iam:DeleteServiceSpecificCredential",
                                                "iam:DeleteSigningCertificate",
                                                "iam:DeleteSSHPublicKey",
                                                "iam:DeleteUser",
                                                "iam:DeleteUserPermissionsBoundary",
                                                "iam:DeleteUserPolicy",
                                                "iam:DetachGroupPolicy",
                                                "iam:DetachRolePolicy",
                                                "iam:DetachUserPolicy",
                                                "iam:PutGroupPolicy",
                                                "iam:PutRolePermissionsBoundary",
                                                "iam:PutRolePolicy",
                                                "iam:PutUserPermissionsBoundary",
                                                "iam:PutUserPolicy",
                                                "iam:RemoveRoleFromInstanceProfile",
                                                "iam:RemoveUserFromGroup",
                                                "iam:UpdateAccessKey",
                                                "iam:UpdateAssumeRolePolicy",
                                                "s3:DeleteBucketPolicy",
                                                "s3:PutBucketPolicy",
                                                "secretsmanager:DeleteResourcePolicy",
                                                "secretsmanager:PutResourcePolicy",
                                                "sso:DeleteAccountAssignment",
                                                "sso:DeleteInlinePolicyFromPermissionSet",
                                                "sso:DeletePermissionSet",
                                                "sso:DetachManagedPolicyFromPermissionSet",
                                                "sso:ProvisionPermissionSet",
                                                "sso:PutInlinePolicyToPermissionSet"
                                            ],
                                            "Resource": "*"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "RoleWorkloadProtectionPolicyEnabled",
                            {
                                "PolicyName": "WorkloadProtectionPolicy",
                                "PolicyDocument": {
                                    "Version": "2012-10-17",
                                    "Statement": [
                                        {
                                            "Effect": "Allow",
                                            "Action": "ec2:CreateSnapshot",
                                            "Resource": {
                                                "Fn::Sub": "arn:${AWS::Partition}:ec2:*:*:volume/*"
                                            }
                                        },
                                        {
                                            "Effect": "Allow",
                                            "Action": "kms:CreateAlias",
                                            "Resource": {
                                                "Fn::Sub": "arn:${AWS::Partition}:kms:*:*:alias/*"
                                            }
                                        },
                                        {
                                            "Effect": "Allow",
                                            "Action": [
                                                "ec2:CopySnapshot",
                                                "ec2:CreateSnapshot",
                                                "ec2:CreateTags",
                                                "kms:CreateKey",
                                                "kms:TagResource"
                                            ],
                                            "Resource": "*",
                                            "Condition": {
                                                "StringEquals": {
                                                    "aws:RequestTag/ErmeticContext": "WorkloadAnalysis"
                                                }
                                            }
                                        },
                                        {
                                            "Effect": "Deny",
                                            "Action": "kms:TagResource",
                                            "Resource": "*",
                                            "Condition": {
                                                "Null": {
                                                    "aws:ResourceTag/ErmeticContext": "true"
                                                }
                                            }
                                        },
                                        {
                                            "Effect": "Allow",
                                            "Action": [
                                                "ec2:CopySnapshot",
                                                "ec2:DeleteSnapshot",
                                                "ec2:ModifySnapshotAttribute",
                                                "kms:CreateAlias",
                                                "kms:CreateGrant",
                                                "kms:Decrypt",
                                                "kms:EnableKeyRotation",
                                                "kms:GenerateDataKeyWithoutPlaintext",
                                                "kms:ReEncryptFrom",
                                                "kms:ReEncryptTo",
                                                "kms:RevokeGrant",
                                                "kms:ScheduleKeyDeletion"
                                            ],
                                            "Resource": "*",
                                            "Condition": {
                                                "StringEquals": {
                                                    "aws:ResourceTag/ErmeticContext": "WorkloadAnalysis"
                                                }
                                            }
                                        },
                                        {
                                            "Effect": "Allow",
                                            "Action": [
                                                "kms:CreateGrant",
                                                "kms:Decrypt",
                                                "kms:ReEncryptFrom"
                                            ],
                                            "Resource": "*",
                                            "Condition": {
                                                "StringLike": {
                                                    "kms:ViaService": "ec2.*.amazonaws.com"
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "RoleJitPolicyEnabled",
                            {
                                "PolicyName": "JitPolicy",
                                "PolicyDocument": {
                                    "Version": "2012-10-17",
                                    "Statement": [
                                        {
                                            "Effect": "Allow",
                                            "Action": [
                                                "iam:ListRoles",
                                                "iam:ListPolicies"
                                            ],
                                            "Resource": "*"
                                        },
                                        {
                                            "Effect": "Allow",
                                            "Action": [
                                                "iam:AttachRolePolicy",
                                                "iam:CreateRole",
                                                "iam:DeleteRole",
                                                "iam:GetRole",
                                                "iam:ListAttachedRolePolicies",
                                                "iam:ListRolePolicies",
                                                "iam:PutRolePolicy"
                                            ],
                                            "Resource": {
                                                "Fn::Sub": "arn:${AWS::Partition}:iam::*:role/aws-reserved/sso.amazonaws.com/*"
                                            }
                                        },
                                        {
                                            "Effect": "Allow",
                                            "Action": [
                                                "iam:GetSAMLProvider",
                                                "iam:UpdateSAMLProvider"
                                            ],
                                            "Resource": {
                                                "Fn::Sub": "arn:${AWS::Partition}:iam::*:saml-provider/AWSSSO_*_DO_NOT_DELETE"
                                            }
                                        },
                                        {
                                            "Effect": "Allow",
                                            "Action": [
                                                "sso:AttachManagedPolicyToPermissionSet",
                                                "sso:CreateAccountAssignment",
                                                "sso:CreatePermissionSet",
                                                "sso:DeleteAccountAssignment",
                                                "sso:DeletePermissionSet",
                                                "sso:Describe*",
                                                "sso:DetachManagedPolicyFromPermissionSet",
                                                "sso:Get*",
                                                "sso:List*",
                                                "sso:ProvisionPermissionSet",
                                                "sso:PutInlinePolicyToPermissionSet",
                                                "sso-directory:List*",
                                                "sso-directory:Search*"
                                            ],
                                            "Resource": "*"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "CloudTrailBucketEnabled",
                            {
                                "Ref": "AWS::NoValue"
                            },
                            {
                                "Fn::If": [
                                    "BucketEncryptionEnabled",
                                    {
                                        "PolicyName": "CloudTrailPolicy",
                                        "PolicyDocument": {
                                            "Version": "2012-10-17",
                                            "Statement": [
                                                {
                                                    "Effect": "Allow",
                                                    "Action": [
                                                        "s3:GetBucketLocation",
                                                        "s3:GetObject",
                                                        "s3:ListBucket"
                                                    ],
                                                    "Resource": [
                                                        {
                                                            "Fn::Sub": "arn:${AWS::Partition}:s3:::${CloudTrailBucketName}"
                                                        },
                                                        {
                                                            "Fn::Sub": "arn:${AWS::Partition}:s3:::${CloudTrailBucketName}/*"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "PolicyName": "CloudTrailPolicy",
                                        "PolicyDocument": {
                                            "Version": "2012-10-17",
                                            "Statement": [
                                                {
                                                    "Effect": "Allow",
                                                    "Action": [
                                                        "s3:GetBucketLocation",
                                                        "s3:GetObject",
                                                        "s3:ListBucket"
                                                    ],
                                                    "Resource": [
                                                        {
                                                            "Fn::Sub": "arn:${AWS::Partition}:s3:::${CloudTrailBucketName}"
                                                        },
                                                        {
                                                            "Fn::Sub": "arn:${AWS::Partition}:s3:::${CloudTrailBucketName}/*"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "Effect": "Allow",
                                                    "Action": "kms:Decrypt",
                                                    "Resource": {
                                                        "Ref": "CloudTrailKeyArn"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "RoleName": {
                    "Ref": "RoleName"
                }
            }
        }
    },
    "Outputs": {
        "TenableRoleArn": {
            "Value": {
                "Fn::GetAtt": [
                    "TenableRole",
                    "Arn"
                ]
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Create IAM Role"
                    },
                    "Parameters": [
                        "RoleName",
                        "RoleExternalId",
                        "RoleTrustedPrincipalId"
                    ]
                },
                {
                    "Label": {
                        "default": "Tenable Polices"
                    },
                    "Parameters": [
                        "RoleMonitoringPolicy",
                        "RoleWorkloadProtectionPolicy",
                        "RoleRemediationPolicy",
                        "RoleJitPolicy"
                    ]
                },
                {
                    "Label": {
                        "default": "CloudTrail Configuration"
                    },
                    "Parameters": [
                        "CloudTrailBucketName",
                        "CloudTrailKeyArn"
                    ]
                }
            ]
        }
    }
}